# QUY TẮC DỰ ÁN COZY-VUE

## TỔNG QUAN DỰ ÁN
- Ứng dụng mạng xã hội Vue 3 + Firebase
- Quản lý state bằng Composition API
- Xác thực Firebase với social login
- Zoom-safe responsive design

---

## CẤU TRÚC THƯ MỤC

### src/composables/
- useAuth.js: Xử lý đăng nhập, đăng ký, quên mật khẩu, social login
- useSettings.js: Quản lý theme, ngôn ngữ, localStorage 
- useValidation.js: Kiểm tra form đầu vào
- useFirestore.js: Quản lý Firebase Firestore operations
- useMobileSwipe.js: Xử lý swipe navigation trên mobile

### src/components/
- LoginForm.vue: Form đăng nhập/đăng ký với tab
- LoginSocial.vue: Đăng nhập mạng xã hội + QR 
- NavLeft.vue: Hiển thị thông tin user
- NavMid.vue: Thanh điều hướng giữa 5 items
- NavRight.vue: Theme switcher, ngôn ngữ, logout
- HomeMenu.vue: Menu điều hướng với các nút
- HomeFeed.vue: Feed hiển thị bài viết với scroll navigation
- DiscoverFeed.vue: Grid hiển thị media thumbnails
- StatusCreation.vue: Form tạo status với upload file

### src/views/
- Login.vue: Trang đăng nhập 
- Home.vue: Trang chủ với feed
- Status.vue: Trang tạo status
- Profile.vue, Friend.vue, Mess.vue, Notification.vue: Placeholder pages
- Discover.vue: Trang khám phá với media grid

### src/router/
- index.js: Router với requiresAuth và requiresGuest guards

### src/stores/
- authStore.js: Quản lý trạng thái Firebase auth

### src/assets/
- main.css: CSS variables và 3-column grid layout
- responsive.css: Mobile breakpoint và swipe layout

### Root Files:
- App.vue: Component gốc
- main.js: Khởi tạo app
- firebase.js: Cấu hình Firebase với social auth providers
- index.html: HTML entry point

---

## QUY TẮC PHÁT TRIỂN

### 1. Cấu trúc Composables
```javascript
export function useFeatureName() {
  // 1. Imports
  // 2. Global state
  // 3. Reactive state  
  // 4. Methods
  // 5. Lifecycle hooks
  // 6. Return object
}
```

### 2. Xử lý lỗi thống nhất
- Tập trung error messages trong useAuth và useFirestore
- Hỗ trợ đa ngôn ngữ EN/VN
- withErrorHandling wrapper cho async operations
- Loading states quản lý tập trung

### 3. Quản lý State
- Global state: Firebase auth qua authStore
- Settings: localStorage qua useSettings  
- Component state: local reactive trong composables
- Không truy cập localStorage trực tiếp từ components

### 4. Giao tiếp Component
- Props xuống, events lên cho parent-child
- Composables cho logic dùng chung
- Router cho URL state
- Global stores chỉ cho authentication

---

## LUỒNG XỬ LÝ

### 1. Luồng xác thực
- Login/Signup → useAuth → Firebase → authStore → Router
- Social Login → Firebase Google/Facebook → authStore → Auto redirect  
- Logout → authStore.logout → Firebase signOut → Router redirect
- Route Guards → authStore.isLoggedIn → Redirect logic

### 2. Luồng cài đặt
- Theme Change → useSettings.changeThemeColor → CSS Variables + localStorage
- Language Toggle → useSettings.toggleLanguage → EN/VN translations + localStorage
- Storage → useSettings methods → localStorage với error handling

### 3. Luồng validation
- Form Submit → useValidation → Error return → useAuth.handleError → Display
- Email/Password validation → Error keys → i18n error messages

### 4. Luồng lưu trữ
- User Preferences → useSettings → localStorage → Page refresh → Auto restore
- Auth State → Firebase → authStore → Browser refresh → Firebase restore
- Remember Login → Encrypted localStorage → Page load → Auto populate

### 5. Luồng Status/Posts
- Tạo bài viết: Status page → Upload file → useFirestore.createPostWithFile → Redirect Home
- Xem bài viết: Home page → useFirestore.getPosts → HomeFeed display
- Xóa bài viết: Click delete → Confirm → useFirestore.deletePost → Update UI
- Khám phá: Discover page → useFirestore.getPosts → DiscoverFeed grid display

### 6. Luồng Mobile Navigation
- Swipe Detection → useMobileSwipe → Container class change → CSS transition
- Touch Events → handleTouchStart/Move/End → View switching

---

## QUY TẮC VẬN HÀNH

### 1. Quy trình phát triển
- KHÔNG thay đổi giao diện khi chưa được yêu cầu
- KHÔNG thêm/bớt chức năng khi chưa được yêu cầu  
- CHỈ giữ logic cần thiết
- Loại bỏ code trùng lặp, dư thừa 
- Code sạch, phần <template> dễ hiểu
- KHÔNG xóa comments hiện có
- Duy trì responsive 3-column layout

### 2. Tiêu chuẩn code
- Vue 3 Composition API pattern nghiêm ngặt
- Naming: camelCase cho tất cả
- CSS variables cho theming
- Không thêm các hiệu ứng hover phức tạp
- Tách biệt logic và presentation

### 3. Bảo mật
- Mã hóa password bằng Base64 trước localStorage
- Input validation qua useValidation
- Firebase security rules compliance
- Error handling không expose sensitive info

### 4. Responsive Design
- Zoom-safe approach với viewport units (vw, vh)
- Desktop: 3-column grid layout với flexible sizing
- Mobile: Single-view với swipe navigation (480px breakpoint)
- Auto-scaling elements scale với zoom level
- Fixed layout, no scroll overflow

---

## CHUẨN CSS

### 1. CSS Organization
```css
/* 1. CSS Variables (zoom-safe với vw/vh units) */
/* 2. Global reset & base styles */
/* 3. Layout styles (grid containers) */
/* 4. Universal component styles */
/* 5. Single mobile breakpoint (@media max-width: 480px) */
```

### 2. Zoom-Safe CSS Variables
```css
:root {
    /* Layout - Viewport Units */
    --container-gap: 1.5vw;
    --container-padding: 1vw;
    --nav-height: 3.5vh;
    
    /* Theme Colors */
    --theme-color: #ffeb7c;
    --bg-primary: #0a0a0a;
    --text-primary: #000;
    
    /* Fixed Values */
    --border-radius: 20px;
    --transition: all 0.3s ease;
}
```

### 3. Universal Sizing Strategy
- Text: `font-size: 1vw; min-font-size: 12px; max-font-size: 16px;`
- Buttons: `padding: 1vh 1.5vw; height: 2.5vh;`
- Icons: `width: 1.2vw; min-width: 14px; max-width: 20px;`
- Containers: `width: 100%; height: 100%; overflow: hidden;`

### 4. Layout Standards
- Desktop: CSS Grid 3-column (1fr 1.14fr 1fr)
- Mobile: Single column với absolute positioning
- Navigation: Fixed positioning với viewport units
- No scroll: `overflow: hidden !important` everywhere

### 5. CSS Best Practices
- Viewport units cho all spacing và sizing
- Min/max constraints cho text readability
- Flex/Grid cho layout
- CSS custom properties cho theming
- No duplicate selectors
- Hardware acceleration với transform